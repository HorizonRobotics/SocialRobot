# Common configuration for non-image tasks with ALF SAC algorithm

import alf.trainers.off_policy_trainer
import alf.algorithms.sac_algorithm
import alf.utils.common

# algorithm config
observation_spec=@get_observation_spec()
action_spec=@get_action_spec()

actor/ActorDistributionNetwork.input_tensor_spec=%observation_spec
actor/ActorDistributionNetwork.output_tensor_spec=%action_spec
actor/ActorDistributionNetwork.fc_layer_params=(256, 128)
actor/ActorDistributionNetwork.continuous_projection_net=@NormalProjectionNetwork

NormalProjectionNetwork.state_dependent_std=True
NormalProjectionNetwork.mean_transform=None
NormalProjectionNetwork.scale_distribution=True
NormalProjectionNetwork.std_transform=@clipped_exp

actor/Adam.learning_rate=2e-3

critic/CriticNetwork.input_tensor_spec=(%observation_spec, %action_spec)
critic/CriticNetwork.joint_fc_layer_params=(256, 128)
critic/Adam.learning_rate=2e-3

alpha/Adam.learning_rate=2e-3

SacAlgorithm.action_spec=%action_spec
SacAlgorithm.actor_network=@actor/ActorDistributionNetwork()
SacAlgorithm.critic_network=@critic/CriticNetwork()
SacAlgorithm.actor_optimizer=@actor/Adam()
SacAlgorithm.critic_optimizer=@critic/Adam()
SacAlgorithm.alpha_optimizer=@alpha/Adam()
SacAlgorithm.target_update_tau=0.005
OneStepTDLoss.td_error_loss_fn=@losses.element_wise_squared_loss

# training config
TrainerConfig.initial_collect_steps=2000
TrainerConfig.mini_batch_length=2
TrainerConfig.unroll_length=1
TrainerConfig.mini_batch_size=256
TrainerConfig.num_iterations=10000000
TrainerConfig.summary_interval=1000
TrainerConfig.eval_interval=5000
TrainerConfig.checkpoint_interval=5000
TrainerConfig.num_updates_per_train_step=1
TrainerConfig.summarize_grads_and_vars=0
TrainerConfig.summaries_flush_secs=10
TrainerConfig.clear_replay_buffer=False

TrainerConfig.trainer=@sync_off_policy_trainer
TrainerConfig.algorithm_ctor=@SacAlgorithm
TrainerConfig.debug_summaries=1
TrainerConfig.evaluate=1

TFUniformReplayBuffer.max_length=100000

