# training & playing with Agent Learning Framework (Alf)
# python -m alf.bin.main --root_dir=~/tmp/icub_sac --gin_file=icub_alf_sac.gin --alsologtostderr
# /opt/workspace/jiangtao.li/tblog/icub/icub_alfsac

import alf.trainers.off_policy_trainer
import alf.algorithms.sac_algorithm
import alf.utils.common
import social_bot

# environment config
create_environment.env_name="SocialBot-ICubWalkPID-v0"
create_environment.num_parallel_environments=12
create_environment.env_load_fn=@suite_socialbot.load

# algorithm config
create_sac_algorithm.actor_fc_layers=(256, 128)
create_sac_algorithm.critic_fc_layers=(256, 128)
create_sac_algorithm.actor_learning_rate=2e-3
create_sac_algorithm.critic_learning_rate=2e-3
create_sac_algorithm.alpha_learning_rate=2e-3
SacAlgorithm.target_update_tau=0.005
OneStepTDLoss.td_error_loss_fn=@losses.element_wise_squared_loss

ActorDistributionNetwork.continuous_projection_net=@NormalProjectionNetwork
NormalProjectionNetwork.state_dependent_std=True
NormalProjectionNetwork.mean_transform=None
NormalProjectionNetwork.scale_distribution=True
NormalProjectionNetwork.std_transform=@common.std_clip_transform

# training config
TrainerConfig.initial_collect_steps=2000
TrainerConfig.mini_batch_length=2
TrainerConfig.unroll_length=1
TrainerConfig.mini_batch_size=256
TrainerConfig.num_iterations=10000000
TrainerConfig.summary_interval=1000
TrainerConfig.eval_interval=5000
TrainerConfig.checkpoint_interval=5000
TrainerConfig.num_updates_per_train_step=1
TrainerConfig.summarize_grads_and_vars=0
TrainerConfig.summaries_flush_secs=10
TrainerConfig.clear_replay_buffer=False

TrainerConfig.trainer=@sync_off_policy_trainer
TrainerConfig.algorithm_ctor=@create_sac_algorithm
TrainerConfig.debug_summaries=1
TrainerConfig.evaluate=1

TFUniformReplayBuffer.max_length=100000

